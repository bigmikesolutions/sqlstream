on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  GO_VERSION: "1.23.3"
  GO_LANG_CI_LINT_VERSION: "v1.61.0"

name: run tests
jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run linters
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GO_LANG_CI_LINT_VERSION }}
  
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    services:
      docker:
        image: docker:dind
        options: --privileged

    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run tests
        run: make test

  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Unit tests with coverage
        run: |
          go test -v -coverprofile=coverage.txt ./sql/...
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}